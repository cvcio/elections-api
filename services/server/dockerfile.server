FROM golang:1.12.5-alpine3.9
ARG version

# Install certificates and git
RUN apk add --update --no-cache ca-certificates git

# Create and use a directory where our project will be build
RUN mkdir /go/src/github.com/cvcio/elections-api/
WORKDIR /go/src/github.com/cvcio/elections-api/

# COPY go.mod and go.sum files to the workspace
COPY go.mod /go/src/github.com/cvcio/elections-api/
COPY go.sum /go/src/github.com/cvcio/elections-api/

# Get dependancies - will also be cached if we won't change mod/sum
RUN go mod download

# COPY the source code 
COPY pkg/ /go/src/github.com/cvcio/elections-api/pkg/
COPY vendor/ /go/src/github.com/cvcio/elections-api/vendor/
COPY proto/ /go/src/github.com/cvcio/elections-api/proto/
COPY models/ /go/src/github.com/cvcio/elections-api/models/
COPY services/server/ /go/src/github.com/cvcio/elections-api/services/server/

WORKDIR /go/src/github.com/cvcio/elections-api/services/server/
RUN GO111MODULE=on GOFLAGS=-mod=vendor CGO_ENABLED=0 GOOS=linux go build -v -ldflags "-X github.com/cvcio/elections-api/services/server/main.version=$version" -a -installsuffix cgo -o server .

FROM alpine:3.8
RUN apk --no-cache add ca-certificates
WORKDIR /server/
COPY --from=0 /go/src/github.com/cvcio/elections-api/services/server .
ENTRYPOINT ["/server/server"]

